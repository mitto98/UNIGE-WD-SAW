stages:
  - build
  - containerize
  - deploy

build-frontend:
  image: node:latest
  stage: build
  only:
    - master
    - dev
  variables:
    MIX_OAUTH_CLIENT_ID: '2'
    MIX_OAUTH_CLIENT_SECRET: 'ohEKqvUQ1EKX7ubzJvCgonBpx1V2AGAIce2hSH9C'
  script:
    - npm install
    - npm run prod
  artifacts:
    paths:
      - app/
      - bootstrap/
      - config/
      - database/
      - public/
      - resources/lang/
      - resources/views/
      - routes/
      - storage/
      - artisan
      - composer.json
      - composer.lock
      - README.md
      - server.php

create-container:
  image: docker:stable
  services:
    - docker:dind
  stage: containerize
  only:
    - master
    - dev
  before_script:
    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  after_script:
    - docker logout ${CI_REGISTRY}
  tags:
    - docker

# Primo deploy: fare login a repo docker
# A causa dei tempi di primo avvio di mysql, il primo artisan migrate fallirÃ 
deploy-prod:
  image: kroniak/ssh-client
  stage: deploy
  only:
    - master
    - dev
  environment: production
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - cp "$SSH_PRIVATE_KEY" ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -tt $SSH_HOST 'mkdir -p ~/mugugno'
    - scp docker-compose.yml "$SSH_HOST:~/mugugno/"
    - ssh -tt $SSH_HOST 'cd ~/mugugno; docker-compose pull laravel'
    - ssh -tt $SSH_HOST 'cd ~/mugugno; docker-compose up -d'
    - ssh -tt $SSH_HOST 'cd ~/mugugno; docker-compose exec laravel mkdir -p storage/framework/{cache,sessions,testing,views}; chown www-data:www-data -R storage/'
    - ssh -tt $SSH_HOST 'cd ~/mugugno; docker-compose exec laravel php artisan migrate --force'
